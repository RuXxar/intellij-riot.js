<idea-plugin>
    <id>riot.js</id>
    <!--suppress PluginXmlCapitalization -->
    <name>Riot.js</name>
    <version>PATCHED</version>
    <vendor email="andrey.starovoyt@jetbrains.com" url="https://github.com/anstarovoyt/intellij-riot.js">
        Andrey Starovoyt
    </vendor>
    <depends>JavaScript</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.xml</depends>
    <depends optional="true" config-file="css-plugin.xml">com.intellij.css</depends>
    <depends optional="true" config-file="js-debugger.xml">JavaScriptDebugger</depends>
    <change-notes><![CDATA[
    <ul>
        <li>Added debug support in ".riot" and ".tag" files via the JavaScript Debug run configuration</li>
    </ul>
    ]]></change-notes>
    <description><![CDATA[
        Riot.js plugin. Provides base support:
<ul>
<li>Extensions ".riot" and ".tag"</li>
<li>Parsing expressions inside html tags and attributes </li>
<li>Navigation based on component names</li>
<li>Parsing Riot.js 3 (and before) script tag syntax</li>
<li>TypeScript</li>
<li>SASS and SCSS</li>
</ul>
    ]]></description>

    <extensions defaultExtensionNs="com.intellij">

        <fileType name="Riot3Html" fieldName="INSTANCE"
                  implementationClass="intellij.riot.lang.v3.Riot3HtmlFileType"
                  language="Riot3Html"
                  extensions="tag"/>

        <fileType name="RiotHtml" fieldName="INSTANCE"
                  implementationClass="intellij.riot.lang.RiotHtmlFileType"
                  language="RiotHtml"
                  extensions="riot"/>

        <lang.parserDefinition language="RiotHtml" implementationClass="intellij.riot.lang.RiotHtmlParserDefinition"/>
        <lang.parserDefinition language="Riot3Html"
                               implementationClass="intellij.riot.lang.v3.Riot3HtmlParserDefinition"/>

        <!-- Xml related things -->
        <xml.elementDescriptorProvider order="first"
                                       implementation="intellij.riot.xml.RiotComponentDescriptorProvider"/>

        <lang.parserDefinition language="RiotJS" implementationClass="intellij.riot.js.RiotJSParsingDefinition"/>
        <lang.parserDefinition language="Riot3TagJS"
                               implementationClass="intellij.riot.js.v3.Riot3TagJSParsingDefinition"/>

        <multiHostInjector implementation="intellij.riot.js.RiotJSInjector" id="riot"/>
        <fileBasedIndex implementation="intellij.riot.xml.RiotComponentIndex"/>

        <lang.syntaxHighlighterFactory language="RiotHtml"
                                       implementationClass="intellij.riot.lang.RiotHighlighterFactory"/>

        <lang.syntaxHighlighterFactory language="Riot3Html"
                                       implementationClass="intellij.riot.lang.RiotHighlighterFactory"/>
        <stubElementTypeHolder order="last" class="intellij.riot.js.RiotStubElements" externalIdPrefix="Riot3TagJS:"/>
        <implicitUsageProvider implementation="intellij.riot.js.RiotImplicitUsageProvider"/>
        <xml.xmlExtension implementation="intellij.riot.xml.RiotXmlExtension"/>
        <postStartupActivity implementation="intellij.riot.lang.RiotFileTypeReassignmentActivity"/>
        <html.embeddedContentSupport implementation="intellij.riot.lang.RiotHtmlEmbeddedContentSupport"/>
    </extensions>
    <extensions defaultExtensionNs="JavaScript">
        <elementScopeProvider implementation="intellij.riot.js.RiotElementResolveScopeProvider"/>
        <frameworkSpecificHandler language="JavaScript"
                                          implementationClass="intellij.riot.js.RiotJSFrameworkSpecificHandlersFactory"/>

        <intentionAndInspectionFilter language="RiotJS" implementationClass="intellij.riot.js.RiotJSInspectionFilter"/>
        <intentionAndInspectionFilter language="Riot3TagJS"
                                      implementationClass="intellij.riot.js.v3.Riot3TagJSInspectionFilter"/>
    </extensions>
</idea-plugin>